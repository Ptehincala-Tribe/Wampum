package main

  import (
    "context"
    "fmt"
    "log"

    "github.com/ethereum/go-ethereum/core/types"
    "github.com/ethereum/go-ethereum/ethclient"
  )

  func main() {
      client, err := ethclient.Dial("wss://astar-mainnet.g.alchemy.com/v2/8qF5b2449W9d4CXR6fHm1sFiZTSt9HUX")
      if err != nil {
          log.Fatal(err)
      }

      headers := make(chan *types.Header)
      sub, err := client.SubscribeNewHead(context.Background(), headers)
      if err != nil {
          log.Fatal(err)
      }

      for {
          select {
          case err := <-sub.Err():
              log.Fatal(err)
          case header := <-headers:
              block, err := client.BlockByHash(context.Background(), header.Hash())
              if err != nil {
                  log.Fatal(err)
              }
              fmt.Println("New block:", block.Number().Uint64())
          }
      }
  }