digraph G {
  graph [ ratio = "auto", page = "100", compound =true, bgcolor = "#2e3e56" ];
  node [ style = "filled", fillcolor = "#edad56", color = "#edad56", penwidth =3 ];
  edge [ color = "#fcfcfc", penwidth =2, fontname = "helvetica Neue Ultra Light" ];
subgraph "clusterTestMetacoin" {
  graph [ label = "TestMetacoin", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "TestMetacoin.testInitialBalanceUsingDeployedContract" [ label = "testInitialBalanceUsingDeployedContract", color = "#FF9797", fillcolor = "#FF9797" ];
  "TestMetacoin.testInitialBalanceWithNewMetaCoin" [ label = "testInitialBalanceWithNewMetaCoin", color = "#FF9797", fillcolor = "#FF9797" ];
  "TestMetacoin.MetaCoin" [ label = "MetaCoin" ];
}

subgraph "clusterDeployedAddresses" {
  graph [ label = "DeployedAddresses", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "DeployedAddresses.MetaCoin" [ label = "MetaCoin" ];
}

subgraph "clusterAssert" {
  graph [ label = "Assert", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "Assert.equal" [ label = "equal" ];
}

subgraph "clusterMetaCoin" {
  graph [ label = "MetaCoin", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "MetaCoin.getBalance" [ label = "getBalance" ];
}

  "TestMetacoin.testInitialBalanceUsingDeployedContract";
  "TestMetacoin.MetaCoin";
  "DeployedAddresses.MetaCoin";
  "Assert.equal";
  "MetaCoin.getBalance";
  "TestMetacoin.testInitialBalanceWithNewMetaCoin";
  "TestMetacoin.testInitialBalanceUsingDeployedContract" -> "TestMetacoin.MetaCoin" [ color = "#1bc6a6" ];
  "TestMetacoin.testInitialBalanceUsingDeployedContract" -> "DeployedAddresses.MetaCoin" [ color = "white" ];
  "TestMetacoin.testInitialBalanceUsingDeployedContract" -> "Assert.equal" [ color = "white" ];
  "TestMetacoin.testInitialBalanceUsingDeployedContract" -> "MetaCoin.getBalance" [ color = "white" ];
  "TestMetacoin.testInitialBalanceWithNewMetaCoin" -> "Assert.equal" [ color = "white" ];
  "TestMetacoin.testInitialBalanceWithNewMetaCoin" -> "MetaCoin.getBalance" [ color = "white" ];


rankdir=LR
node [shape=plaintext]
subgraph cluster_01 { 
label = "Legend";
key [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td align="right" port="i1">Internal Call</td></tr>
  <tr><td align="right" port="i2">External Call</td></tr>
  <tr><td align="right" port="i3">Defined Contract</td></tr>
  <tr><td align="right" port="i4">Undefined Contract</td></tr>
  </table>>]
key2 [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td port="i1">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i2">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i3" bgcolor="#445773">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i4">
    <table border="1" cellborder="0" cellspacing="0" cellpadding="7" color="#e8726d">
      <tr>
       <td></td>
      </tr>
     </table>
  </td></tr>
  </table>>]
key:i1:e -> key2:i1:w [color="#1bc6a6"]
key:i2:e -> key2:i2:w [color="white"]
}
}
